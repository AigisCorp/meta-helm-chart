# -- Name
fullnameOverride: "example-helm-chart"

# -- Deployments
deployments:
  - name: first-deployment
    replicaCount: 1
    initContainers:
      - name: alpine
        image:
          repository: alpine
          tag: latest
        securityContext:
          readOnlyRootFilesystem: true
        args:
          - "echo"
          - "Hello World"
        env:
          - name: TEMP
            value: /tmp
        PullPolicy: IfNotPresent
    containers:
      - name: phpfpm
        image:
          repository: bitnami/php-fpm
          tag: "latest"
        pullPolicy: IfNotPresent
        securityContext:
          readOnlyRootFilesystem: false
        env:
          - name: TEMP
            value: /tmp
        ports:
          - name: php
            containerPort: 9000
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
          - name: shared-storage
            mountPath: /data/shared-storage

      - name: nginx
        image:
          repository: nginx
          tag: "latest"
        pullPolicy: IfNotPresent

        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "date > /container-started.txt"]
          preStop:
            exec:
              command: ["/usr/sbin/nginx", "-s", "quit"]
        ports:
          - name: http
            containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
          - name: shared-storage
            mountPath: /data/shared-storage
    volumes:
      - name: shared-storage
        emptyDir: {}

  - name: second-deployment
    replicaCount: 1
    containers:
      - name: nginx
        image:
          repository: nginx
          tag: "latest"
        pullPolicy: Always
        ports:
          - name: http
            containerPort: 80
        resources: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}